services:
  db:
    image: mysql:latest
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    ports:
      - "3307:3306"
    env_file: .env
    expose: 
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=django_user
      - MYSQL_PASSWORD=${DB_PASSWORD}  
    networks:
      - mynetwork   
    
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - ./backend:/home/app/backend
    ports:
      - "8001:8000"
    environment:
      - FIREBASE_TYPE=service_account
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
      - FIREBASE_AUTH_URI=${FIREBASE_AUTH_URI}
      - FIREBASE_TOKEN_URI=${FIREBASE_TOKEN_URI}
      - FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
      - FIREBASE_CLIENT_X509_CERT_URL=${FIREBASE_CLIENT_X509_CERT_URL}
      - FIREBASE_UNIVERSE_DOMAIN=${FIREBASE_UNIVERSE_DOMAIN}
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    restart: "on-failure"
    depends_on:
      - db
    networks:
      - mynetwork

  frontend:
    build:
      context: ./frontend/fitness-diet-forum
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/fitness-diet-forum:/home/app/frontend
    command: "npm start"
    restart: "on-failure"
    depends_on:
      - backend
    networks:
      - mynetwork

volumes:
  db_data:

networks:
  mynetwork:
    driver: bridge